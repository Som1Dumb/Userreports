#!/bin/bash

# Get hostname
HOSTNAME=$(hostname)

# Get current date
DATE=$(date +"%Y-%m-%d %H:%M:%S")

# Define report file (stored in the working directory)
REPORT_FILE="$(pwd)/Linux_malware_report.csv"

# Start CSV file with headers
echo "Hostname,Software,Installed,Running,Last Update,Version,Up-to-date" > "$REPORT_FILE"

# Function to check if a service is running
check_service() {
    SERVICE_NAME=$1
    if systemctl is-active --quiet "$SERVICE_NAME"; then
        echo "Running"
    else
        echo "Not Running"
    fi
}

# Function to check last update time of signature files
get_last_update() {
    FILE_PATH=$1
    if [[ -f "$FILE_PATH" ]]; then
        stat -c %y "$FILE_PATH" | cut -d' ' -f1
    else
        echo "Unknown"
    fi
}

# Function to get software version
get_version() {
    SOFTWARE=$1
    case "$SOFTWARE" in
        clamav)
            clamscan --version 2>/dev/null | awk '{print $2}' | tr -d ','
            ;;
        sophos)
            /opt/sophos-av/bin/savdstatus --version 2>/dev/null | awk '{print $3}'
            ;;
        mcafee)
            /opt/McAfee/agent/bin/cmdagent -i 2>/dev/null | grep -i "Product version" | awk -F ': ' '{print $2}'
            ;;
        f-secure)
            /opt/f-secure/fsav/bin/fsav --version 2>/dev/null | head -n 1 | awk '{print $3}'
            ;;
        bitdefender)
            /opt/BitDefender-scanner/bin/bdscan --version 2>/dev/null | awk '{print $2}'
            ;;
        *)
            echo "Unknown"
            ;;
    esac
}

# Function to check if software is up to date
check_up_to_date() {
    SOFTWARE=$1
    LAST_UPDATE=$2
    if [[ "$LAST_UPDATE" == "Unknown" ]]; then
        echo "Unknown"
    else
        TODAY=$(date +%Y-%m-%d)
        if [[ "$LAST_UPDATE" == "$TODAY" ]]; then
            echo "Yes"
        else
            echo "No"
        fi
    fi
}

# List of known malware protection software and their signature update locations
declare -A MALWARE_SOFTWARE
MALWARE_SOFTWARE["clamav"]="clamav-daemon:/var/lib/clamav/daily.cvd"
MALWARE_SOFTWARE["sophos"]="sav-protect:/opt/sophos-av/update_cache"
MALWARE_SOFTWARE["mcafee"]="ma:/opt/McAfee/agent/update.dat"
MALWARE_SOFTWARE["f-secure"]="fsavd:/var/opt/f-secure/fssp/update"
MALWARE_SOFTWARE["bitdefender"]="bdscan:/opt/BitDefender-scanner/var/lib/"

# Check for installed malware protection software
for SOFTWARE in "${!MALWARE_SOFTWARE[@]}"; do
    SERVICE_NAME=${MALWARE_SOFTWARE[$SOFTWARE]%:*}
    UPDATE_PATH=${MALWARE_SOFTWARE[$SOFTWARE]#*:}

    if command -v "$SOFTWARE" &>/dev/null || systemctl list-units --type=service | grep -q "$SERVICE_NAME"; then
        RUNNING_STATUS=$(check_service "$SERVICE_NAME")
        LAST_UPDATE=$(get_last_update "$UPDATE_PATH")
        VERSION=$(get_version "$SOFTWARE")
        UP_TO_DATE=$(check_up_to_date "$SOFTWARE" "$LAST_UPDATE")
        echo "$HOSTNAME,$SOFTWARE,Yes,$RUNNING_STATUS,$LAST_UPDATE,$VERSION,$UP_TO_DATE" >> "$REPORT_FILE"
    else
        echo "$HOSTNAME,$SOFTWARE,No,Not Installed,Unknown,Unknown,Unknown" >> "$REPORT_FILE"
    fi
done

# Notify user
echo "Malware protection check completed. Report saved as: $REPORT_FILE"
