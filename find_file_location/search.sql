-- Disable console output to clean up export process
SET HEADING OFF;
SET FEEDBACK OFF;
SET LINESIZE 1000;
SET PAGESIZE 50000;
SET COLSEP ',';

-- Drop the table if it exists
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE FILE_LOCATIONS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN -- Ignore "table does not exist" error
            RAISE;
        END IF;
END;
/

-- Create a table to store file locations
CREATE TABLE FILE_LOCATIONS (
    FILE_TYPE VARCHAR2(50),
    FILE_NAME VARCHAR2(200),
    FILE_PATH VARCHAR2(1000),
    RETRIEVED_AT TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- Insert Data Files Locations
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Data File', NAME, NAME FROM V$DATAFILE;

-- Insert Control Files Locations
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Control File', NAME, NAME FROM V$CONTROLFILE;

-- Insert Redo Log Files Locations
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Redo Log File', MEMBER, MEMBER FROM V$LOGFILE;

-- Insert Temporary Files Locations
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Temporary File', NAME, NAME FROM V$TEMPFILE;

-- Insert Archive Log Files Locations (Retrieve one sample)
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Archive Log File', NAME, NAME FROM V$ARCHIVED_LOG WHERE ROWNUM = 1;

-- Insert Alert Log File Location
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Alert Log File', 'ALERT.LOG', VALUE FROM V$DIAG_INFO WHERE NAME = 'Diag Trace';

-- Insert INIT.ORA File Location
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'INIT.ORA File', 'INIT.ORA', VALUE FROM V$SPPARAMETER WHERE ROWNUM = 1;

-- Insert SPFILE.ORA File Location
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'SPFILE.ORA File', 'SPFILE.ORA', VALUE FROM V$SPPARAMETER WHERE ISSPECIFIED = 'TRUE';

-- Insert CONFIG.ORA File (Manually define if needed)
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
VALUES ('CONFIG.ORA File', 'CONFIG.ORA', 'MANUAL ENTRY REQUIRED');

-- Insert Data Directories Location
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Data Directory', 'Data Files Directory', VALUE FROM V$DIAG_INFO WHERE NAME = 'Diag Trace';

-- Insert LISTENER.ORA File Location
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'LISTENER.ORA File', 'LISTENER.ORA', VALUE FROM V$DIAG_INFO WHERE NAME = 'Listener Log Location';

-- Insert TNSNAMES.ORA File Location
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
VALUES ('TNSNAMES.ORA File', 'TNSNAMES.ORA', 'MANUAL ENTRY REQUIRED OR CHECK $ORACLE_HOME/network/admin');

-- Insert Password File Location
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
SELECT 'Password File', 'ORAPW', VALUE FROM V$DIAG_INFO WHERE NAME = 'Diag Trace';

-- Insert EM Grid Agent Config File (Requires manual setup)
INSERT INTO FILE_LOCATIONS (FILE_TYPE, FILE_NAME, FILE_PATH)
VALUES ('EM Grid Agent Config', 'EMAGENT.ORA', 'MANUAL ENTRY REQUIRED');

-- Commit the changes
COMMIT;

-- Export to CSV file
SPOOL file_locations.csv;

SELECT FILE_TYPE || ',' || FILE_NAME || ',' || FILE_PATH FROM FILE_LOCATIONS;

SPOOL OFF;

EXIT;
