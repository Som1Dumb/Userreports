-- Disable console output to clean up export process
SET HEADING OFF;
SET FEEDBACK OFF;
SET LINESIZE 1000;
SET PAGESIZE 50000;

-- Drop the table if it exists
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE FILE_LOCATIONS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN -- Ignore "table does not exist" error
            RAISE;
        END IF;
END;
/

-- Create a table to store file locations
CREATE TABLE FILE_LOCATIONS (FILE_PATH VARCHAR2(1000));

-- Insert Data Files Locations
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT NAME FROM V$DATAFILE;

-- Insert Control Files Locations
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT NAME FROM V$CONTROLFILE;

-- Insert Redo Log Files Locations
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT MEMBER FROM V$LOGFILE;

-- Insert Temporary Files Locations
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT NAME FROM V$TEMPFILE;

-- Insert Archive Log Files Locations (Retrieve one sample)
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT NAME FROM V$ARCHIVED_LOG WHERE ROWNUM = 1;

-- Insert Alert Log File Location
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT VALUE FROM V$DIAG_INFO WHERE NAME = 'Diag Trace';

-- Insert INIT.ORA File Location
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT VALUE FROM V$SPPARAMETER WHERE ROWNUM = 1;

-- Insert SPFILE.ORA File Location
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT VALUE FROM V$SPPARAMETER WHERE ISSPECIFIED = 'TRUE';

-- Insert Data Directories Location
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT VALUE FROM V$DIAG_INFO WHERE NAME = 'Diag Trace';

-- Insert LISTENER.ORA File Location
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT VALUE FROM V$DIAG_INFO WHERE NAME = 'Listener Log Location';

-- Insert Password File Location
INSERT INTO FILE_LOCATIONS (FILE_PATH)
SELECT VALUE FROM V$DIAG_INFO WHERE NAME = 'Diag Trace';

-- Commit the changes
COMMIT;

-- Export only file paths to CSV file
SPOOL file_paths.csv;

SELECT FILE_PATH FROM FILE_LOCATIONS;

SPOOL OFF;

EXIT;
